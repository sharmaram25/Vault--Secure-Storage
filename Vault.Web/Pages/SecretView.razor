@page "/secret/{Id:int}"
@attribute [Authorize]
@inject SecretService SecretService
@inject NavigationManager Navigation
@inject IJSRuntime JS

<PageTitle>View Secret - Vault</PageTitle>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            @if (isLoading)
            {
                <div class="d-flex justify-content-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
            else if (secret != null)
            {
                <div class="card bg-secondary border-0 shadow-lg">
                    <div class="card-header bg-gradient text-white d-flex justify-content-between align-items-center py-3" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                        <h4 class="mb-0">@secret.Title</h4>
                        <div class="btn-group btn-group-sm">
                            <button class="btn btn-outline-light" @onclick="@(() => Navigation.NavigateTo($"/secret/{Id}/edit"))">
                                <i class="bi bi-pencil me-1"></i> Edit
                            </button>
                            <button class="btn btn-outline-light" @onclick="ToggleContentVisibility">
                                @if (isContentVisible)
                                {
                                    <i class="bi bi-eye-slash me-1"></i> <span>Hide</span>
                                }
                                else
                                {
                                    <i class="bi bi-eye me-1"></i> <span>Reveal</span>
                                }
                            </button>
                        </div>
                    </div>
                    <div class="card-body p-4">
                        <div class="mb-3">
                            <label class="form-label text-light fw-bold">Content:</label>
                            @if (isContentVisible)
                            {
                                <div class="form-control bg-dark text-white border-secondary" style="min-height: 200px; white-space: pre-wrap; font-family: monospace;">@secret.Content</div>
                                <div class="d-flex gap-2 mt-2">
                                    <button class="btn btn-outline-success btn-sm" @onclick="CopyToClipboard">
                                        <i class="bi bi-clipboard me-1"></i> Copy
                                    </button>
                                </div>
                            }
                            else
                            {
                                <div class="form-control bg-dark text-light border-secondary d-flex align-items-center justify-content-center" style="min-height: 200px;">
                                    <div class="text-center">
                                        <i class="bi bi-lock text-warning" style="font-size: 2rem;"></i>
                                        <p class="mt-2 text-light">Content is hidden for security</p>
                                        <small class="text-light">Click "Reveal" to show the content</small>
                                    </div>
                                </div>
                            }
                        </div>
                        
                        <div class="row">
                            <div class="col-sm-6">
                                <small class="text-light">
                                    <strong>Created:</strong> @secret.CreatedAt.ToString("MMM dd, yyyy 'at' h:mm tt")
                                </small>
                            </div>
                            @if (secret.UpdatedAt.HasValue)
                            {
                                <div class="col-sm-6">
                                    <small class="text-light">
                                        <strong>Updated:</strong> @secret.UpdatedAt.Value.ToString("MMM dd, yyyy 'at' h:mm tt")
                                    </small>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-footer bg-dark border-0">
                        <button class="btn btn-gradient" @onclick="@(() => Navigation.NavigateTo("/"))">
                            <i class="bi bi-arrow-left me-2"></i> Back to Vault
                        </button>
                    </div>
                </div>
            }
            else
            {
                <div class="alert alert-warning bg-warning text-dark">
                    <h4>Secret Not Found</h4>
                    <p>The secret you're looking for could not be found.</p>
                    <button class="btn btn-gradient" @onclick="@(() => Navigation.NavigateTo("/"))">
                        <i class="bi bi-arrow-left me-2"></i> Back to Vault
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }

    private SecretDto? secret;
    private bool isLoading = true;
    private bool isContentVisible = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadSecret();
    }

    private async Task LoadSecret()
    {
        isLoading = true;
        secret = await SecretService.GetSecretAsync(Id);
        isLoading = false;
        StateHasChanged();
    }

    private void ToggleContentVisibility()
    {
        isContentVisible = !isContentVisible;
        StateHasChanged();
    }

    private async Task CopyToClipboard()
    {
        if (secret?.Content != null)
        {
            await JS.InvokeVoidAsync("navigator.clipboard.writeText", secret.Content);
            // Could add a toast notification here
        }
    }
}
