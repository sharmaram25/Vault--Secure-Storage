@page "/profile"
@inject HttpClient HttpClient
@inject IJSRuntime JSRuntime
@attribute [Authorize]

<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12 col-md-8 col-lg-6">
            <div class="card bg-secondary border-0 shadow-lg">
                <div class="card-header bg-gradient text-white text-center py-4" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
                    <h3 class="mb-0">
                        <i class="bi bi-person-circle me-2"></i>
                        User Profile
                    </h3>
                </div>
                
                <div class="card-body p-4">
                    @if (isLoading)
                    {
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2 text-muted">Loading profile...</p>
                        </div>
                    }
                    else if (profile != null)
                    {
                        <!-- Profile Information -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h5 class="text-primary mb-3">
                                    <i class="bi bi-info-circle me-2"></i>
                                    Account Information
                                </h5>
                                
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="form-label text-light fw-bold small">Username</label>
                                        <div class="bg-dark rounded p-2 border">
                                            <strong class="text-white">@profile.Username</strong>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label text-light fw-bold small">Email</label>
                                        <div class="bg-dark rounded p-2 border">
                                            <strong class="text-white">@profile.Email</strong>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label text-light fw-bold small">Member Since</label>
                                        <div class="bg-dark rounded p-2 border">
                                            <strong class="text-white">@profile.CreatedAt.ToString("MMM dd, yyyy")</strong>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <label class="form-label text-light fw-bold small">Last Login</label>
                                        <div class="bg-dark rounded p-2 border">
                                            <strong class="text-white">
                                                @(profile.LastLoginAt?.ToString("MMM dd, yyyy") ?? "Never")
                                            </strong>
                                        </div>
                                    </div>
                                    <div class="col-12">
                                        <label class="form-label text-light fw-bold small">Total Secrets Stored</label>
                                        <div class="bg-gradient rounded p-3 text-center text-white" style="background: linear-gradient(135deg, #28a745 0%, #20c997 100%);">
                                            <h4 class="mb-0">
                                                <i class="bi bi-shield-lock me-2"></i>
                                                @profile.TotalSecrets
                                            </h4>
                                            <small>Encrypted Secrets</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <hr class="my-4">

                        <!-- Change Password Section -->
                        <div class="row">
                            <div class="col-12">
                                <h5 class="text-primary mb-3">
                                    <i class="bi bi-key me-2"></i>
                                    Security
                                </h5>
                                
                                @if (showChangePassword)
                                {
                                    <div class="border rounded p-3 bg-dark">
                                        <EditForm Model="changePasswordModel" OnValidSubmit="HandleChangePassword">
                                            <DataAnnotationsValidator />
                                            
                                            <div class="mb-3">
                                                <label class="form-label text-light fw-bold">Current Password</label>
                                                <InputText type="password" class="form-control bg-secondary text-white border-dark" 
                                                          @bind-Value="changePasswordModel.CurrentPassword" />
                                                <ValidationMessage For="@(() => changePasswordModel.CurrentPassword)" class="text-danger" />
                                            </div>
                                            
                                            <div class="mb-3">
                                                <label class="form-label text-light fw-bold">New Password</label>
                                                <InputText type="password" class="form-control bg-secondary text-white border-dark" 
                                                          @bind-Value="changePasswordModel.NewPassword" />
                                                <ValidationMessage For="@(() => changePasswordModel.NewPassword)" class="text-danger" />
                                            </div>
                                            
                                            <div class="d-flex gap-2">
                                                <button type="submit" class="btn btn-success" disabled="@isChangingPassword">
                                                    @if (isChangingPassword)
                                                    {
                                                        <span class="spinner-border spinner-border-sm me-2"></span>
                                                    }
                                                    <i class="bi bi-check-lg me-1"></i>
                                                    Change Password
                                                </button>
                                                <button type="button" class="btn btn-secondary" @onclick="CancelChangePassword">
                                                    <i class="bi bi-x-lg me-1"></i>
                                                    Cancel
                                                </button>
                                            </div>
                                        </EditForm>
                                    </div>
                                }
                                else
                                {
                                    <button class="btn btn-outline-warning" @onclick="ShowChangePasswordForm">
                                        <i class="bi bi-key me-2"></i>
                                        Change Password
                                    </button>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="bi bi-exclamation-triangle text-warning" style="font-size: 3rem;"></i>
                            <h5 class="mt-3">Failed to load profile</h5>
                            <button class="btn btn-primary mt-2" @onclick="LoadProfile">
                                <i class="bi bi-arrow-clockwise me-1"></i>
                                Retry
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserProfileDto? profile;
    private ChangePasswordDto changePasswordModel = new();
    private bool isLoading = true;
    private bool showChangePassword = false;
    private bool isChangingPassword = false;

    protected override async Task OnInitializedAsync()
    {
        await LoadProfile();
    }

    private async Task LoadProfile()
    {
        try
        {
            isLoading = true;
            var response = await HttpClient.GetAsync("api/user/profile");
            
            if (response.IsSuccessStatusCode)
            {
                profile = await response.Content.ReadFromJsonAsync<UserProfileDto>();
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "Failed to load profile:", ex.Message);
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ShowChangePasswordForm()
    {
        showChangePassword = true;
        changePasswordModel = new ChangePasswordDto();
    }

    private void CancelChangePassword()
    {
        showChangePassword = false;
        changePasswordModel = new ChangePasswordDto();
    }

    private async Task HandleChangePassword()
    {
        try
        {
            isChangingPassword = true;
            var response = await HttpClient.PostAsJsonAsync("api/user/change-password", changePasswordModel);
            
            if (response.IsSuccessStatusCode)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Password changed successfully!");
                CancelChangePassword();
            }
            else
            {
                var error = await response.Content.ReadAsStringAsync();
                await JSRuntime.InvokeVoidAsync("alert", $"Failed to change password: {error}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"Error: {ex.Message}");
        }
        finally
        {
            isChangingPassword = false;
        }
    }
}
